## Ref. https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/lokiexporter/example/otel-collector-config.yml
receivers:
  otlp:
    protocols:
      grpc:
        ## endpoint: 0.0.0.0:4317
      http:
        ## endpoint: 0.0.0.0:4318

processors:
  batch:
    send_batch_size: 50
    timeout: 5s
  memory_limiter:
    check_interval: 2s
    limit_mib: 1800
    spike_limit_mib: 500

exporters:
  logging:
    loglevel: debug
  loki:
    endpoint: "$EXPORTERS_LOKI_ENDPOINT"
    format: json
    labels:
      resource:
        log_name: ""
        zone_name: ""
        cluster_name: "cluster_name"
        node_name: "node_name"
        # Allowing 'container.name' attribute and transform it to 'container_name', which is a valid Loki label name.
        container.name: "container_name"
        # Allowing 'k8s.cluster.name' attribute and transform it to 'k8s_cluster_name', which is a valid Loki label name.
        k8s.cluster.name: "k8s_cluster_name"
        os.type: "os_type"
        host.name: "host_name"
        service.name: "service_name"
        resource.name: "resource_name"
        browser.user_agent: "user_agent"
      attributes:
        # Allowing 'severity' attribute and not providing a mapping, since the attribute name is a valid Loki label name.
        severity: "severity"
        http.method: "method"
        http.status_code: "http_status_code"
        log.file.name: "log_file_name"
      record:
        # Adds 'traceID' as a log label, seen as 'traceid' in Loki.
        traceID: "trace_id"
        spanID: "span_id"
        severity: "severity"
extensions:
  health_check:
  pprof:
  zpages:
  memory_ballast:
    # Memory Ballast size should be max 1/3 to 1/2 of memory.
    size_mib: 64

service:
  telemetry:
    logs:
      level: "debug"
  extensions: [pprof, zpages, health_check]
  pipelines:
    logs:
      receivers: [ otlp ]
      processors: [ memory_limiter, batch ]
      exporters: [ logging, loki ]
