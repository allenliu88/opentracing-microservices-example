---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-sampling
  namespace: istio-system
  labels:
    app: otel-collector-sampling
data:
  otel-collector-sampling-config.yaml: |
    receivers:
      zipkin:
      jaeger/defaults:
        protocols:
          grpc:
          thrift_http:
          thrift_compact:
          thrift_binary:
    exporters:
      logging:
        loglevel: debug
      jaeger:
        endpoint: "$EXPORTERS_JAEGER_ENDPOINT"
        tls:
          insecure: true
    ## 参考：https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/v0.70.0/processor/tailsamplingprocessor
    ## 注意，不同版本配置可能不同！
    processors:
      tail_sampling:
        decision_wait: 10s
        num_traces: 50000
        expected_new_traces_per_sec: 10
        policies:
          [
            {
              name: status_code-1,
              type: status_code,
              status_code: {status_codes: [ERROR]}
            },
            {
              name: latency-1,
              type: latency,
              latency: {threshold_ms: 5000}
            },
            {
              name: and-policy-1,
              type: and,
              and: {
                and_sub_policy:
                  [
                    {
                      name: probabilistic-1,
                      type: probabilistic,
                      probabilistic: {sampling_percentage: 10}
                    },
                    {
                      name: string_attribute-1,
                      type: string_attribute,
                      string_attribute: {key: http.route, values: ["/actuator/health", ".*actuator.*"], enabled_regex_matching: true, invert_match: true}
                    },
                    {
                      name: string_attribute-2,
                      type: string_attribute,
                      string_attribute: {key: http.path, values: ["/actuator/health", ".*actuator.*"], enabled_regex_matching: true, invert_match: true}
                    },
                  ]
              }
            },
          ]
    service:
      telemetry:
        logs:
          level: "debug"
      pipelines:
        traces:
          receivers: [zipkin, jaeger/defaults]
          processors: [tail_sampling]
          exporters: [logging, jaeger]
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector-sampling
  namespace: istio-system
  labels:
    app: otel-collector-sampling
spec:
  ports:
  - port: 9411
    name: http-zipkin
  - port: 14250
    name: grpc-jaeger
  selector:
    app: otel-collector-sampling
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector-sampling
  namespace: istio-system
  labels:
    app: otel-collector-sampling
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-collector-sampling
  template:
    metadata:
      labels:
        app: otel-collector-sampling
        version: v1
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: app
        image: allen88/otel-collector-sampling:0.1.0
        imagePullPolicy: Always
        env:
        - name: EXPORTERS_JAEGER_ENDPOINT
          value: "jaeger-collector.istio-system.svc:14250"
        ports:
        - containerPort: 14250
          name: grpc-jaeger
        - containerPort: 9411
          name: http-zipkin
        volumeMounts:
        - name: config-volume
          mountPath: "/u01/config"
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: otel-collector-sampling
---